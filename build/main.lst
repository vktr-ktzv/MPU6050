ARM GAS  /tmp/ccNbBpaI.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._write,"ax",%progbits
  16              		.align	1
  17              		.global	_write
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	_write:
  25              	.LVL0:
  26              	.LFB40:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "MPU6050.h"
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccNbBpaI.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** int _write(int file, uint8_t* p, int len)
  37:Core/Src/main.c **** {
  28              		.loc 1 37 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 37 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 1400     		movs	r4, r2
  38:Core/Src/main.c **** 	if(HAL_UART_Transmit(&huart2, p, len, len) == HAL_OK )
  39              		.loc 1 38 2 is_stmt 1 view .LVU2
  40              		.loc 1 38 5 is_stmt 0 view .LVU3
  41 0004 92B2     		uxth	r2, r2
  42              	.LVL1:
  43              		.loc 1 38 5 view .LVU4
  44 0006 2300     		movs	r3, r4
  45 0008 0448     		ldr	r0, .L4
  46              	.LVL2:
  47              		.loc 1 38 5 view .LVU5
  48 000a FFF7FEFF 		bl	HAL_UART_Transmit
  49              	.LVL3:
  50              		.loc 1 38 4 view .LVU6
  51 000e 0028     		cmp	r0, #0
  52 0010 01D0     		beq	.L3
  39:Core/Src/main.c **** 	{
  40:Core/Src/main.c **** 		return len;
  41:Core/Src/main.c **** 	}
  42:Core/Src/main.c **** 	return 0;
  53              		.loc 1 42 9 view .LVU7
  54 0012 0020     		movs	r0, #0
  55              	.L1:
  43:Core/Src/main.c **** }
  56              		.loc 1 43 1 view .LVU8
  57              		@ sp needed
  58              	.LVL4:
  59              		.loc 1 43 1 view .LVU9
  60 0014 10BD     		pop	{r4, pc}
  61              	.LVL5:
  62              	.L3:
  40:Core/Src/main.c **** 	}
  63              		.loc 1 40 10 view .LVU10
  64 0016 2000     		movs	r0, r4
  65 0018 FCE7     		b	.L1
  66              	.L5:
  67 001a C046     		.align	2
  68              	.L4:
  69 001c 00000000 		.word	huart2
  70              		.cfi_endproc
  71              	.LFE40:
ARM GAS  /tmp/ccNbBpaI.s 			page 3


  73              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
  74              		.align	2
  75              	.LC2:
  76 0000 6163635F 		.ascii	"acc_x_raw: %d, acc_y_raw: %d, acc_z_raw: %d, gyro_x"
  76      785F7261 
  76      773A2025 
  76      642C2061 
  76      63635F79 
  77 0033 5F726177 		.ascii	"_raw: %d, gyro_y_raw: %d, gyro_z_raw: %d \012\015\000"
  77      3A202564 
  77      2C206779 
  77      726F5F79 
  77      5F726177 
  78              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  79              		.align	1
  80              		.global	HAL_TIM_PeriodElapsedCallback
  81              		.syntax unified
  82              		.code	16
  83              		.thumb_func
  84              		.fpu softvfp
  86              	HAL_TIM_PeriodElapsedCallback:
  87              	.LVL6:
  88              	.LFB41:
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PTD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  49:Core/Src/main.c **** /* USER CODE BEGIN PD */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PD */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  54:Core/Src/main.c **** /* USER CODE BEGIN PM */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PM */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE BEGIN PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.c **** void SystemClock_Config(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
  74:Core/Src/main.c **** {     
  89              		.loc 1 74 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccNbBpaI.s 			page 4


  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		.loc 1 74 1 is_stmt 0 view .LVU12
  94 0000 70B5     		push	{r4, r5, r6, lr}
  95              	.LCFI1:
  96              		.cfi_def_cfa_offset 16
  97              		.cfi_offset 4, -16
  98              		.cfi_offset 5, -12
  99              		.cfi_offset 6, -8
 100              		.cfi_offset 14, -4
 101 0002 84B0     		sub	sp, sp, #16
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 32
  75:Core/Src/main.c ****       //HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET); 
  76:Core/Src/main.c ****       MPU6050_ProcessData(&MPU6050);
 104              		.loc 1 76 7 is_stmt 1 view .LVU13
 105 0004 0B4C     		ldr	r4, .L7
 106 0006 2000     		movs	r0, r4
 107              	.LVL7:
 108              		.loc 1 76 7 is_stmt 0 view .LVU14
 109 0008 FFF7FEFF 		bl	MPU6050_ProcessData
 110              	.LVL8:
  77:Core/Src/main.c ****       printf("acc_x_raw: %d, acc_y_raw: %d, acc_z_raw: %d, gyro_x_raw: %d, gyro_y_raw: %d, gyro_z_r
 111              		.loc 1 77 7 is_stmt 1 view .LVU15
 112              		.loc 1 77 121 is_stmt 0 view .LVU16
 113 000c 0023     		movs	r3, #0
 114 000e E15E     		ldrsh	r1, [r4, r3]
 115              		.loc 1 77 140 view .LVU17
 116 0010 0223     		movs	r3, #2
 117 0012 E25E     		ldrsh	r2, [r4, r3]
 118              		.loc 1 77 159 view .LVU18
 119 0014 0420     		movs	r0, #4
 120 0016 235E     		ldrsh	r3, [r4, r0]
 121              		.loc 1 77 177 view .LVU19
 122 0018 0825     		movs	r5, #8
 123 001a 605F     		ldrsh	r0, [r4, r5]
 124              		.loc 1 77 197 view .LVU20
 125 001c 0A26     		movs	r6, #10
 126 001e A55F     		ldrsh	r5, [r4, r6]
 127              		.loc 1 77 217 view .LVU21
 128 0020 0C26     		movs	r6, #12
 129 0022 A45F     		ldrsh	r4, [r4, r6]
 130              		.loc 1 77 7 view .LVU22
 131 0024 0294     		str	r4, [sp, #8]
 132 0026 0195     		str	r5, [sp, #4]
 133 0028 0090     		str	r0, [sp]
 134 002a 0348     		ldr	r0, .L7+4
 135 002c FFF7FEFF 		bl	printf
 136              	.LVL9:
  78:Core/Src/main.c ****       
  79:Core/Src/main.c **** }
 137              		.loc 1 79 1 view .LVU23
 138 0030 04B0     		add	sp, sp, #16
 139              		@ sp needed
 140 0032 70BD     		pop	{r4, r5, r6, pc}
 141              	.L8:
 142              		.align	2
 143              	.L7:
ARM GAS  /tmp/ccNbBpaI.s 			page 5


 144 0034 00000000 		.word	MPU6050
 145 0038 00000000 		.word	.LC2
 146              		.cfi_endproc
 147              	.LFE41:
 149              		.section	.text.Error_Handler,"ax",%progbits
 150              		.align	1
 151              		.global	Error_Handler
 152              		.syntax unified
 153              		.code	16
 154              		.thumb_func
 155              		.fpu softvfp
 157              	Error_Handler:
 158              	.LFB44:
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /**
  85:Core/Src/main.c ****   * @brief  The application entry point.
  86:Core/Src/main.c ****   * @retval int
  87:Core/Src/main.c ****   */
  88:Core/Src/main.c **** int main(void)
  89:Core/Src/main.c **** {
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Core/Src/main.c ****   HAL_Init();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Configure the system clock */
 104:Core/Src/main.c ****   SystemClock_Config();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Initialize all configured peripherals */
 111:Core/Src/main.c ****   MX_GPIO_Init();
 112:Core/Src/main.c ****   MX_I2C1_Init();
 113:Core/Src/main.c ****   MX_USART2_UART_Init();
 114:Core/Src/main.c ****   MX_TIM1_Init();
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 116:Core/Src/main.c ****   MPU6050_Initialization();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 119:Core/Src/main.c ****   
 120:Core/Src/main.c ****   /* USER CODE END 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Infinite loop */
 123:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  /tmp/ccNbBpaI.s 			page 6


 124:Core/Src/main.c ****   while (1)
 125:Core/Src/main.c ****   {
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 129:Core/Src/main.c ****   
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   /* USER CODE END 3 */
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****   * @brief System Clock Configuration
 136:Core/Src/main.c ****   * @retval None
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c **** void SystemClock_Config(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 145:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 155:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156:Core/Src/main.c ****   {
 157:Core/Src/main.c ****     Error_Handler();
 158:Core/Src/main.c ****   }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 173:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 174:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  /tmp/ccNbBpaI.s 			page 7


 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE END 4 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** void Error_Handler(void)
 189:Core/Src/main.c **** {
 159              		.loc 1 189 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ Volatile: function does not return.
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 190:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 191:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 192:Core/Src/main.c ****   __disable_irq();
 165              		.loc 1 192 3 view .LVU25
 166              	.LBB4:
 167              	.LBI4:
 168              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  /tmp/ccNbBpaI.s 			page 8


  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  /tmp/ccNbBpaI.s 			page 9


  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 169              		.loc 2 140 27 view .LVU26
 170              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 171              		.loc 2 142 3 view .LVU27
 172              		.syntax divided
 173              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 174 0000 72B6     		cpsid i
 175              	@ 0 "" 2
ARM GAS  /tmp/ccNbBpaI.s 			page 10


 176              		.thumb
 177              		.syntax unified
 178              	.L10:
 179              	.LBE5:
 180              	.LBE4:
 193:Core/Src/main.c ****   while (1)
 181              		.loc 1 193 3 discriminator 1 view .LVU28
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****   }
 182              		.loc 1 195 3 discriminator 1 view .LVU29
 193:Core/Src/main.c ****   while (1)
 183              		.loc 1 193 9 discriminator 1 view .LVU30
 184 0002 FEE7     		b	.L10
 185              		.cfi_endproc
 186              	.LFE44:
 188              		.section	.text.SystemClock_Config,"ax",%progbits
 189              		.align	1
 190              		.global	SystemClock_Config
 191              		.syntax unified
 192              		.code	16
 193              		.thumb_func
 194              		.fpu softvfp
 196              	SystemClock_Config:
 197              	.LFB43:
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 198              		.loc 1 139 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 88
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 00B5     		push	{lr}
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 14, -4
 206 0002 97B0     		sub	sp, sp, #92
 207              	.LCFI4:
 208              		.cfi_def_cfa_offset 96
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 209              		.loc 1 140 3 view .LVU32
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 210              		.loc 1 140 22 is_stmt 0 view .LVU33
 211 0004 3022     		movs	r2, #48
 212 0006 0021     		movs	r1, #0
 213 0008 0AA8     		add	r0, sp, #40
 214 000a FFF7FEFF 		bl	memset
 215              	.LVL10:
 141:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 216              		.loc 1 141 3 is_stmt 1 view .LVU34
 141:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 217              		.loc 1 141 22 is_stmt 0 view .LVU35
 218 000e 1022     		movs	r2, #16
 219 0010 0021     		movs	r1, #0
 220 0012 06A8     		add	r0, sp, #24
 221 0014 FFF7FEFF 		bl	memset
 222              	.LVL11:
 142:Core/Src/main.c **** 
 223              		.loc 1 142 3 is_stmt 1 view .LVU36
 142:Core/Src/main.c **** 
ARM GAS  /tmp/ccNbBpaI.s 			page 11


 224              		.loc 1 142 28 is_stmt 0 view .LVU37
 225 0018 1422     		movs	r2, #20
 226 001a 0021     		movs	r1, #0
 227 001c 01A8     		add	r0, sp, #4
 228 001e FFF7FEFF 		bl	memset
 229              	.LVL12:
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 230              		.loc 1 147 3 is_stmt 1 view .LVU38
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 231              		.loc 1 147 36 is_stmt 0 view .LVU39
 232 0022 0323     		movs	r3, #3
 233 0024 0A93     		str	r3, [sp, #40]
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 234              		.loc 1 148 3 is_stmt 1 view .LVU40
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 235              		.loc 1 148 30 is_stmt 0 view .LVU41
 236 0026 023B     		subs	r3, r3, #2
 237 0028 0B93     		str	r3, [sp, #44]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 238              		.loc 1 149 3 is_stmt 1 view .LVU42
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 239              		.loc 1 149 30 is_stmt 0 view .LVU43
 240 002a 0D93     		str	r3, [sp, #52]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 241              		.loc 1 150 3 is_stmt 1 view .LVU44
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 242              		.loc 1 150 41 is_stmt 0 view .LVU45
 243 002c 0F33     		adds	r3, r3, #15
 244 002e 0E93     		str	r3, [sp, #56]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 245              		.loc 1 151 3 is_stmt 1 view .LVU46
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 246              		.loc 1 151 34 is_stmt 0 view .LVU47
 247 0030 0E3B     		subs	r3, r3, #14
 248 0032 1293     		str	r3, [sp, #72]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 249              		.loc 1 152 3 is_stmt 1 view .LVU48
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 250              		.loc 1 152 35 is_stmt 0 view .LVU49
 251 0034 8023     		movs	r3, #128
 252 0036 5B02     		lsls	r3, r3, #9
 253 0038 1393     		str	r3, [sp, #76]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 254              		.loc 1 153 3 is_stmt 1 view .LVU50
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 255              		.loc 1 154 3 view .LVU51
 155:Core/Src/main.c ****   {
 256              		.loc 1 155 3 view .LVU52
 155:Core/Src/main.c ****   {
 257              		.loc 1 155 7 is_stmt 0 view .LVU53
 258 003a 0AA8     		add	r0, sp, #40
 259 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
 260              	.LVL13:
 155:Core/Src/main.c ****   {
 261              		.loc 1 155 6 view .LVU54
 262 0040 0028     		cmp	r0, #0
 263 0042 17D1     		bne	.L15
ARM GAS  /tmp/ccNbBpaI.s 			page 12


 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 264              		.loc 1 162 3 is_stmt 1 view .LVU55
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 265              		.loc 1 162 31 is_stmt 0 view .LVU56
 266 0044 0723     		movs	r3, #7
 267 0046 0693     		str	r3, [sp, #24]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 268              		.loc 1 164 3 is_stmt 1 view .LVU57
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 269              		.loc 1 164 34 is_stmt 0 view .LVU58
 270 0048 053B     		subs	r3, r3, #5
 271 004a 0793     		str	r3, [sp, #28]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 272              		.loc 1 165 3 is_stmt 1 view .LVU59
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 273              		.loc 1 165 35 is_stmt 0 view .LVU60
 274 004c 0023     		movs	r3, #0
 275 004e 0893     		str	r3, [sp, #32]
 166:Core/Src/main.c **** 
 276              		.loc 1 166 3 is_stmt 1 view .LVU61
 166:Core/Src/main.c **** 
 277              		.loc 1 166 36 is_stmt 0 view .LVU62
 278 0050 0993     		str	r3, [sp, #36]
 168:Core/Src/main.c ****   {
 279              		.loc 1 168 3 is_stmt 1 view .LVU63
 168:Core/Src/main.c ****   {
 280              		.loc 1 168 7 is_stmt 0 view .LVU64
 281 0052 0021     		movs	r1, #0
 282 0054 06A8     		add	r0, sp, #24
 283 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 284              	.LVL14:
 168:Core/Src/main.c ****   {
 285              		.loc 1 168 6 view .LVU65
 286 005a 0028     		cmp	r0, #0
 287 005c 0CD1     		bne	.L16
 172:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 288              		.loc 1 172 3 is_stmt 1 view .LVU66
 172:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 289              		.loc 1 172 38 is_stmt 0 view .LVU67
 290 005e 2023     		movs	r3, #32
 291 0060 0193     		str	r3, [sp, #4]
 173:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 292              		.loc 1 173 3 is_stmt 1 view .LVU68
 173:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 293              		.loc 1 173 36 is_stmt 0 view .LVU69
 294 0062 0023     		movs	r3, #0
 295 0064 0493     		str	r3, [sp, #16]
 174:Core/Src/main.c ****   {
 296              		.loc 1 174 3 is_stmt 1 view .LVU70
 174:Core/Src/main.c ****   {
 297              		.loc 1 174 7 is_stmt 0 view .LVU71
 298 0066 01A8     		add	r0, sp, #4
 299 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 300              	.LVL15:
 174:Core/Src/main.c ****   {
 301              		.loc 1 174 6 view .LVU72
 302 006c 0028     		cmp	r0, #0
ARM GAS  /tmp/ccNbBpaI.s 			page 13


 303 006e 05D1     		bne	.L17
 178:Core/Src/main.c **** 
 304              		.loc 1 178 1 view .LVU73
 305 0070 17B0     		add	sp, sp, #92
 306              		@ sp needed
 307 0072 00BD     		pop	{pc}
 308              	.L15:
 157:Core/Src/main.c ****   }
 309              		.loc 1 157 5 is_stmt 1 view .LVU74
 310 0074 FFF7FEFF 		bl	Error_Handler
 311              	.LVL16:
 312              	.L16:
 170:Core/Src/main.c ****   }
 313              		.loc 1 170 5 view .LVU75
 314 0078 FFF7FEFF 		bl	Error_Handler
 315              	.LVL17:
 316              	.L17:
 176:Core/Src/main.c ****   }
 317              		.loc 1 176 5 view .LVU76
 318 007c FFF7FEFF 		bl	Error_Handler
 319              	.LVL18:
 320              		.cfi_endproc
 321              	.LFE43:
 323              		.section	.text.main,"ax",%progbits
 324              		.align	1
 325              		.global	main
 326              		.syntax unified
 327              		.code	16
 328              		.thumb_func
 329              		.fpu softvfp
 331              	main:
 332              	.LFB42:
  89:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 333              		.loc 1 89 1 view -0
 334              		.cfi_startproc
 335              		@ Volatile: function does not return.
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 10B5     		push	{r4, lr}
 339              	.LCFI5:
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 4, -8
 342              		.cfi_offset 14, -4
  97:Core/Src/main.c **** 
 343              		.loc 1 97 3 view .LVU78
 344 0002 FFF7FEFF 		bl	HAL_Init
 345              	.LVL19:
 104:Core/Src/main.c **** 
 346              		.loc 1 104 3 view .LVU79
 347 0006 FFF7FEFF 		bl	SystemClock_Config
 348              	.LVL20:
 111:Core/Src/main.c ****   MX_I2C1_Init();
 349              		.loc 1 111 3 view .LVU80
 350 000a FFF7FEFF 		bl	MX_GPIO_Init
 351              	.LVL21:
 112:Core/Src/main.c ****   MX_USART2_UART_Init();
 352              		.loc 1 112 3 view .LVU81
ARM GAS  /tmp/ccNbBpaI.s 			page 14


 353 000e FFF7FEFF 		bl	MX_I2C1_Init
 354              	.LVL22:
 113:Core/Src/main.c ****   MX_TIM1_Init();
 355              		.loc 1 113 3 view .LVU82
 356 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 357              	.LVL23:
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 358              		.loc 1 114 3 view .LVU83
 359 0016 FFF7FEFF 		bl	MX_TIM1_Init
 360              	.LVL24:
 116:Core/Src/main.c **** 
 361              		.loc 1 116 3 view .LVU84
 362 001a FFF7FEFF 		bl	MPU6050_Initialization
 363              	.LVL25:
 118:Core/Src/main.c ****   
 364              		.loc 1 118 3 view .LVU85
 365 001e 0248     		ldr	r0, .L20
 366 0020 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 367              	.LVL26:
 368              	.L19:
 124:Core/Src/main.c ****   {
 369              		.loc 1 124 3 discriminator 1 view .LVU86
 130:Core/Src/main.c ****   /* USER CODE END 3 */
 370              		.loc 1 130 3 discriminator 1 view .LVU87
 124:Core/Src/main.c ****   {
 371              		.loc 1 124 9 discriminator 1 view .LVU88
 372 0024 FEE7     		b	.L19
 373              	.L21:
 374 0026 C046     		.align	2
 375              	.L20:
 376 0028 00000000 		.word	htim1
 377              		.cfi_endproc
 378              	.LFE42:
 380              		.text
 381              	.Letext0:
 382              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 383              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 384              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 385              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 386              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 387              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 388              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 389              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 390              		.file 11 "Core/Inc/tim.h"
 391              		.file 12 "Core/Inc/usart.h"
 392              		.file 13 "Core/Inc/MPU6050.h"
 393              		.file 14 "<built-in>"
 394              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 395              		.file 16 "Core/Inc/gpio.h"
 396              		.file 17 "Core/Inc/i2c.h"
ARM GAS  /tmp/ccNbBpaI.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccNbBpaI.s:16     .text._write:0000000000000000 $t
     /tmp/ccNbBpaI.s:24     .text._write:0000000000000000 _write
     /tmp/ccNbBpaI.s:69     .text._write:000000000000001c $d
     /tmp/ccNbBpaI.s:74     .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/ccNbBpaI.s:79     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccNbBpaI.s:86     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccNbBpaI.s:144    .text.HAL_TIM_PeriodElapsedCallback:0000000000000034 $d
     /tmp/ccNbBpaI.s:150    .text.Error_Handler:0000000000000000 $t
     /tmp/ccNbBpaI.s:157    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccNbBpaI.s:189    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccNbBpaI.s:196    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccNbBpaI.s:324    .text.main:0000000000000000 $t
     /tmp/ccNbBpaI.s:331    .text.main:0000000000000000 main
     /tmp/ccNbBpaI.s:376    .text.main:0000000000000028 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart2
MPU6050_ProcessData
printf
MPU6050
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_USART2_UART_Init
MX_TIM1_Init
MPU6050_Initialization
HAL_TIM_Base_Start_IT
htim1
