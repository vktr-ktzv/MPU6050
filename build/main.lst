ARM GAS  /tmp/ccC1QyOm.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._write,"ax",%progbits
  16              		.align	1
  17              		.global	_write
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	_write:
  25              	.LVL0:
  26              	.LFB40:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** #include "MPU6050.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccC1QyOm.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** int _write(int file, uint8_t* p, int len)
  36:Core/Src/main.c **** {
  28              		.loc 1 36 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 36 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 1400     		movs	r4, r2
  37:Core/Src/main.c **** 	if(HAL_UART_Transmit(&huart2, p, len, len) == HAL_OK )
  39              		.loc 1 37 2 is_stmt 1 view .LVU2
  40              		.loc 1 37 5 is_stmt 0 view .LVU3
  41 0004 92B2     		uxth	r2, r2
  42              	.LVL1:
  43              		.loc 1 37 5 view .LVU4
  44 0006 2300     		movs	r3, r4
  45 0008 0448     		ldr	r0, .L4
  46              	.LVL2:
  47              		.loc 1 37 5 view .LVU5
  48 000a FFF7FEFF 		bl	HAL_UART_Transmit
  49              	.LVL3:
  50              		.loc 1 37 4 view .LVU6
  51 000e 0028     		cmp	r0, #0
  52 0010 01D0     		beq	.L3
  38:Core/Src/main.c **** 	{
  39:Core/Src/main.c **** 		return len;
  40:Core/Src/main.c **** 	}
  41:Core/Src/main.c **** 	return 0;
  53              		.loc 1 41 9 view .LVU7
  54 0012 0020     		movs	r0, #0
  55              	.L1:
  42:Core/Src/main.c **** }
  56              		.loc 1 42 1 view .LVU8
  57              		@ sp needed
  58              	.LVL4:
  59              		.loc 1 42 1 view .LVU9
  60 0014 10BD     		pop	{r4, pc}
  61              	.LVL5:
  62              	.L3:
  39:Core/Src/main.c **** 	}
  63              		.loc 1 39 10 view .LVU10
  64 0016 2000     		movs	r0, r4
  65 0018 FCE7     		b	.L1
  66              	.L5:
  67 001a C046     		.align	2
  68              	.L4:
  69 001c 00000000 		.word	huart2
  70              		.cfi_endproc
  71              	.LFE40:
  73              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  /tmp/ccC1QyOm.s 			page 3


  74              		.align	1
  75              		.global	Error_Handler
  76              		.syntax unified
  77              		.code	16
  78              		.thumb_func
  79              		.fpu softvfp
  81              	Error_Handler:
  82              	.LFB43:
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PTD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PD */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  52:Core/Src/main.c **** /* USER CODE BEGIN PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PM */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
  91:Core/Src/main.c **** 
ARM GAS  /tmp/ccC1QyOm.s 			page 4


  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   MX_I2C1_Init();
 102:Core/Src/main.c ****   MX_USART2_UART_Init();
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   MPU6050_Initialization();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END 2 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Infinite loop */
 110:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 111:Core/Src/main.c ****   while (1)
 112:Core/Src/main.c ****   {
 113:Core/Src/main.c ****     /* USER CODE END WHILE */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 116:Core/Src/main.c ****     if(MPU6050_DataReady() == 1)
 117:Core/Src/main.c **** 		{
 118:Core/Src/main.c **** 			MPU6050_ProcessData(&MPU6050);
 119:Core/Src/main.c **** 			printf("MPU6050.acc_x: %f, MPU6050.acc_y: %f, MPU6050.acc_z: %f\n", MPU6050.acc_x, MPU6050.acc_y
 120:Core/Src/main.c **** 			printf("MPU6050.gyro_x: %f, MPU6050.gyro_y: %f, MPU6050.gyro_z: %f\n", MPU6050.gyro_x, MPU6050.g
 121:Core/Src/main.c **** 			printf("MPU6050.acc_x_raw: %d, MPU6050.acc_y_raw: %d, MPU6050.acc_z_raw: %d\n\n\n", MPU6050.acc_
 122:Core/Src/main.c **** 		}
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     HAL_Delay(100);
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   /* USER CODE END 3 */
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief System Clock Configuration
 131:Core/Src/main.c ****   * @retval None
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** void SystemClock_Config(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 140:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
ARM GAS  /tmp/ccC1QyOm.s 			page 5


 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 150:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     Error_Handler();
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 158:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 164:Core/Src/main.c ****   {
 165:Core/Src/main.c ****     Error_Handler();
 166:Core/Src/main.c ****   }
 167:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 168:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 169:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     Error_Handler();
 172:Core/Src/main.c ****   }
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE END 4 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 181:Core/Src/main.c ****   * @retval None
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c **** void Error_Handler(void)
 184:Core/Src/main.c **** {
  83              		.loc 1 184 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ Volatile: function does not return.
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
 185:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 186:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 187:Core/Src/main.c ****   __disable_irq();
  89              		.loc 1 187 3 view .LVU12
  90              	.LBB4:
  91              	.LBI4:
  92              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
ARM GAS  /tmp/ccC1QyOm.s 			page 6


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  /tmp/ccC1QyOm.s 			page 7


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccC1QyOm.s 			page 8


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  93              		.loc 2 140 27 view .LVU13
  94              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  95              		.loc 2 142 3 view .LVU14
  96              		.syntax divided
  97              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  98 0000 72B6     		cpsid i
  99              	@ 0 "" 2
 100              		.thumb
 101              		.syntax unified
 102              	.L7:
 103              	.LBE5:
 104              	.LBE4:
 188:Core/Src/main.c ****   while (1)
 105              		.loc 1 188 3 discriminator 1 view .LVU15
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****   }
 106              		.loc 1 190 3 discriminator 1 view .LVU16
 188:Core/Src/main.c ****   while (1)
 107              		.loc 1 188 9 discriminator 1 view .LVU17
 108 0002 FEE7     		b	.L7
 109              		.cfi_endproc
 110              	.LFE43:
 112              		.section	.text.SystemClock_Config,"ax",%progbits
 113              		.align	1
 114              		.global	SystemClock_Config
 115              		.syntax unified
 116              		.code	16
 117              		.thumb_func
 118              		.fpu softvfp
 120              	SystemClock_Config:
 121              	.LFB42:
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 122              		.loc 1 134 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 88
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccC1QyOm.s 			page 9


 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 14, -4
 130 0002 97B0     		sub	sp, sp, #92
 131              	.LCFI2:
 132              		.cfi_def_cfa_offset 96
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 133              		.loc 1 135 3 view .LVU19
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 134              		.loc 1 135 22 is_stmt 0 view .LVU20
 135 0004 3022     		movs	r2, #48
 136 0006 0021     		movs	r1, #0
 137 0008 0AA8     		add	r0, sp, #40
 138 000a FFF7FEFF 		bl	memset
 139              	.LVL6:
 136:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 140              		.loc 1 136 3 is_stmt 1 view .LVU21
 136:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 141              		.loc 1 136 22 is_stmt 0 view .LVU22
 142 000e 1022     		movs	r2, #16
 143 0010 0021     		movs	r1, #0
 144 0012 06A8     		add	r0, sp, #24
 145 0014 FFF7FEFF 		bl	memset
 146              	.LVL7:
 137:Core/Src/main.c **** 
 147              		.loc 1 137 3 is_stmt 1 view .LVU23
 137:Core/Src/main.c **** 
 148              		.loc 1 137 28 is_stmt 0 view .LVU24
 149 0018 1422     		movs	r2, #20
 150 001a 0021     		movs	r1, #0
 151 001c 01A8     		add	r0, sp, #4
 152 001e FFF7FEFF 		bl	memset
 153              	.LVL8:
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 154              		.loc 1 142 3 is_stmt 1 view .LVU25
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 155              		.loc 1 142 36 is_stmt 0 view .LVU26
 156 0022 0323     		movs	r3, #3
 157 0024 0A93     		str	r3, [sp, #40]
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158              		.loc 1 143 3 is_stmt 1 view .LVU27
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 159              		.loc 1 143 30 is_stmt 0 view .LVU28
 160 0026 023B     		subs	r3, r3, #2
 161 0028 0B93     		str	r3, [sp, #44]
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 162              		.loc 1 144 3 is_stmt 1 view .LVU29
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 163              		.loc 1 144 30 is_stmt 0 view .LVU30
 164 002a 0D93     		str	r3, [sp, #52]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 165              		.loc 1 145 3 is_stmt 1 view .LVU31
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 166              		.loc 1 145 41 is_stmt 0 view .LVU32
 167 002c 0F33     		adds	r3, r3, #15
 168 002e 0E93     		str	r3, [sp, #56]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  /tmp/ccC1QyOm.s 			page 10


 169              		.loc 1 146 3 is_stmt 1 view .LVU33
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 170              		.loc 1 146 34 is_stmt 0 view .LVU34
 171 0030 0E3B     		subs	r3, r3, #14
 172 0032 1293     		str	r3, [sp, #72]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 173              		.loc 1 147 3 is_stmt 1 view .LVU35
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 174              		.loc 1 147 35 is_stmt 0 view .LVU36
 175 0034 8023     		movs	r3, #128
 176 0036 5B02     		lsls	r3, r3, #9
 177 0038 1393     		str	r3, [sp, #76]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 178              		.loc 1 148 3 is_stmt 1 view .LVU37
 149:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 179              		.loc 1 149 3 view .LVU38
 150:Core/Src/main.c ****   {
 180              		.loc 1 150 3 view .LVU39
 150:Core/Src/main.c ****   {
 181              		.loc 1 150 7 is_stmt 0 view .LVU40
 182 003a 0AA8     		add	r0, sp, #40
 183 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
 184              	.LVL9:
 150:Core/Src/main.c ****   {
 185              		.loc 1 150 6 view .LVU41
 186 0040 0028     		cmp	r0, #0
 187 0042 17D1     		bne	.L12
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 188              		.loc 1 157 3 is_stmt 1 view .LVU42
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 189              		.loc 1 157 31 is_stmt 0 view .LVU43
 190 0044 0723     		movs	r3, #7
 191 0046 0693     		str	r3, [sp, #24]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 192              		.loc 1 159 3 is_stmt 1 view .LVU44
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 193              		.loc 1 159 34 is_stmt 0 view .LVU45
 194 0048 053B     		subs	r3, r3, #5
 195 004a 0793     		str	r3, [sp, #28]
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 196              		.loc 1 160 3 is_stmt 1 view .LVU46
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 197              		.loc 1 160 35 is_stmt 0 view .LVU47
 198 004c 0023     		movs	r3, #0
 199 004e 0893     		str	r3, [sp, #32]
 161:Core/Src/main.c **** 
 200              		.loc 1 161 3 is_stmt 1 view .LVU48
 161:Core/Src/main.c **** 
 201              		.loc 1 161 36 is_stmt 0 view .LVU49
 202 0050 0993     		str	r3, [sp, #36]
 163:Core/Src/main.c ****   {
 203              		.loc 1 163 3 is_stmt 1 view .LVU50
 163:Core/Src/main.c ****   {
 204              		.loc 1 163 7 is_stmt 0 view .LVU51
 205 0052 0021     		movs	r1, #0
 206 0054 06A8     		add	r0, sp, #24
 207 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccC1QyOm.s 			page 11


 208              	.LVL10:
 163:Core/Src/main.c ****   {
 209              		.loc 1 163 6 view .LVU52
 210 005a 0028     		cmp	r0, #0
 211 005c 0CD1     		bne	.L13
 167:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 212              		.loc 1 167 3 is_stmt 1 view .LVU53
 167:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 213              		.loc 1 167 38 is_stmt 0 view .LVU54
 214 005e 2023     		movs	r3, #32
 215 0060 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 216              		.loc 1 168 3 is_stmt 1 view .LVU55
 168:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 217              		.loc 1 168 36 is_stmt 0 view .LVU56
 218 0062 0023     		movs	r3, #0
 219 0064 0493     		str	r3, [sp, #16]
 169:Core/Src/main.c ****   {
 220              		.loc 1 169 3 is_stmt 1 view .LVU57
 169:Core/Src/main.c ****   {
 221              		.loc 1 169 7 is_stmt 0 view .LVU58
 222 0066 01A8     		add	r0, sp, #4
 223 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 224              	.LVL11:
 169:Core/Src/main.c ****   {
 225              		.loc 1 169 6 view .LVU59
 226 006c 0028     		cmp	r0, #0
 227 006e 05D1     		bne	.L14
 173:Core/Src/main.c **** 
 228              		.loc 1 173 1 view .LVU60
 229 0070 17B0     		add	sp, sp, #92
 230              		@ sp needed
 231 0072 00BD     		pop	{pc}
 232              	.L12:
 152:Core/Src/main.c ****   }
 233              		.loc 1 152 5 is_stmt 1 view .LVU61
 234 0074 FFF7FEFF 		bl	Error_Handler
 235              	.LVL12:
 236              	.L13:
 165:Core/Src/main.c ****   }
 237              		.loc 1 165 5 view .LVU62
 238 0078 FFF7FEFF 		bl	Error_Handler
 239              	.LVL13:
 240              	.L14:
 171:Core/Src/main.c ****   }
 241              		.loc 1 171 5 view .LVU63
 242 007c FFF7FEFF 		bl	Error_Handler
 243              	.LVL14:
 244              		.cfi_endproc
 245              	.LFE42:
 247              		.global	__aeabi_f2d
 248              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 249              		.align	2
 250              	.LC2:
 251 0000 4D505536 		.ascii	"MPU6050.acc_x: %f, MPU6050.acc_y: %f, MPU6050.acc_z"
 251      3035302E 
 251      6163635F 
ARM GAS  /tmp/ccC1QyOm.s 			page 12


 251      783A2025 
 251      662C204D 
 252 0033 3A202566 		.ascii	": %f\012\000"
 252      0A00
 253 0039 000000   		.align	2
 254              	.LC4:
 255 003c 4D505536 		.ascii	"MPU6050.gyro_x: %f, MPU6050.gyro_y: %f, MPU6050.gyr"
 255      3035302E 
 255      6779726F 
 255      5F783A20 
 255      25662C20 
 256 006f 6F5F7A3A 		.ascii	"o_z: %f\012\000"
 256      2025660A 
 256      00
 257              		.align	2
 258              	.LC6:
 259 0078 4D505536 		.ascii	"MPU6050.acc_x_raw: %d, MPU6050.acc_y_raw: %d, MPU60"
 259      3035302E 
 259      6163635F 
 259      785F7261 
 259      773A2025 
 260 00ab 35302E61 		.ascii	"50.acc_z_raw: %d\012\012\012\000"
 260      63635F7A 
 260      5F726177 
 260      3A202564 
 260      0A0A0A00 
 261              		.section	.text.main,"ax",%progbits
 262              		.align	1
 263              		.global	main
 264              		.syntax unified
 265              		.code	16
 266              		.thumb_func
 267              		.fpu softvfp
 269              	main:
 270              	.LFB41:
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 271              		.loc 1 78 1 view -0
 272              		.cfi_startproc
 273              		@ Volatile: function does not return.
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 277              	.LCFI3:
 278              		.cfi_def_cfa_offset 20
 279              		.cfi_offset 4, -20
 280              		.cfi_offset 5, -16
 281              		.cfi_offset 6, -12
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 C646     		mov	lr, r8
 285 0004 00B5     		push	{lr}
 286              	.LCFI4:
 287              		.cfi_def_cfa_offset 24
 288              		.cfi_offset 8, -24
 289 0006 84B0     		sub	sp, sp, #16
 290              	.LCFI5:
 291              		.cfi_def_cfa_offset 40
ARM GAS  /tmp/ccC1QyOm.s 			page 13


  86:Core/Src/main.c **** 
 292              		.loc 1 86 3 view .LVU65
 293 0008 FFF7FEFF 		bl	HAL_Init
 294              	.LVL15:
  93:Core/Src/main.c **** 
 295              		.loc 1 93 3 view .LVU66
 296 000c FFF7FEFF 		bl	SystemClock_Config
 297              	.LVL16:
 100:Core/Src/main.c ****   MX_I2C1_Init();
 298              		.loc 1 100 3 view .LVU67
 299 0010 FFF7FEFF 		bl	MX_GPIO_Init
 300              	.LVL17:
 101:Core/Src/main.c ****   MX_USART2_UART_Init();
 301              		.loc 1 101 3 view .LVU68
 302 0014 FFF7FEFF 		bl	MX_I2C1_Init
 303              	.LVL18:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 304              		.loc 1 102 3 view .LVU69
 305 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 306              	.LVL19:
 105:Core/Src/main.c **** 
 307              		.loc 1 105 3 view .LVU70
 308 001c FFF7FEFF 		bl	MPU6050_Initialization
 309              	.LVL20:
 310 0020 3DE0     		b	.L17
 311              	.L18:
 312              	.LBB6:
 118:Core/Src/main.c **** 			printf("MPU6050.acc_x: %f, MPU6050.acc_y: %f, MPU6050.acc_z: %f\n", MPU6050.acc_x, MPU6050.acc_y
 313              		.loc 1 118 4 view .LVU71
 314 0022 214C     		ldr	r4, .L19
 315 0024 2000     		movs	r0, r4
 316 0026 FFF7FEFF 		bl	MPU6050_ProcessData
 317              	.LVL21:
 119:Core/Src/main.c **** 			printf("MPU6050.gyro_x: %f, MPU6050.gyro_y: %f, MPU6050.gyro_z: %f\n", MPU6050.gyro_x, MPU6050.g
 318              		.loc 1 119 4 view .LVU72
 119:Core/Src/main.c **** 			printf("MPU6050.gyro_x: %f, MPU6050.gyro_y: %f, MPU6050.gyro_z: %f\n", MPU6050.gyro_x, MPU6050.g
 319              		.loc 1 119 94 is_stmt 0 view .LVU73
 320 002a 6569     		ldr	r5, [r4, #20]
 119:Core/Src/main.c **** 			printf("MPU6050.gyro_x: %f, MPU6050.gyro_y: %f, MPU6050.gyro_z: %f\n", MPU6050.gyro_x, MPU6050.g
 321              		.loc 1 119 109 view .LVU74
 322 002c A369     		ldr	r3, [r4, #24]
 323 002e 9846     		mov	r8, r3
 119:Core/Src/main.c **** 			printf("MPU6050.gyro_x: %f, MPU6050.gyro_y: %f, MPU6050.gyro_z: %f\n", MPU6050.gyro_x, MPU6050.g
 324              		.loc 1 119 4 view .LVU75
 325 0030 2069     		ldr	r0, [r4, #16]
 326 0032 FFF7FEFF 		bl	__aeabi_f2d
 327              	.LVL22:
 328 0036 0600     		movs	r6, r0
 329 0038 0F00     		movs	r7, r1
 330 003a 4046     		mov	r0, r8
 331 003c FFF7FEFF 		bl	__aeabi_f2d
 332              	.LVL23:
 333 0040 0290     		str	r0, [sp, #8]
 334 0042 0391     		str	r1, [sp, #12]
 335 0044 281C     		adds	r0, r5, #0
 336 0046 FFF7FEFF 		bl	__aeabi_f2d
 337              	.LVL24:
ARM GAS  /tmp/ccC1QyOm.s 			page 14


 338 004a 0090     		str	r0, [sp]
 339 004c 0191     		str	r1, [sp, #4]
 340 004e 3200     		movs	r2, r6
 341 0050 3B00     		movs	r3, r7
 342 0052 1648     		ldr	r0, .L19+4
 343 0054 FFF7FEFF 		bl	printf
 344              	.LVL25:
 120:Core/Src/main.c **** 			printf("MPU6050.acc_x_raw: %d, MPU6050.acc_y_raw: %d, MPU6050.acc_z_raw: %d\n\n\n", MPU6050.acc_
 345              		.loc 1 120 4 is_stmt 1 view .LVU76
 120:Core/Src/main.c **** 			printf("MPU6050.acc_x_raw: %d, MPU6050.acc_y_raw: %d, MPU6050.acc_z_raw: %d\n\n\n", MPU6050.acc_
 346              		.loc 1 120 98 is_stmt 0 view .LVU77
 347 0058 656A     		ldr	r5, [r4, #36]
 120:Core/Src/main.c **** 			printf("MPU6050.acc_x_raw: %d, MPU6050.acc_y_raw: %d, MPU6050.acc_z_raw: %d\n\n\n", MPU6050.acc_
 348              		.loc 1 120 114 view .LVU78
 349 005a A36A     		ldr	r3, [r4, #40]
 350 005c 9846     		mov	r8, r3
 120:Core/Src/main.c **** 			printf("MPU6050.acc_x_raw: %d, MPU6050.acc_y_raw: %d, MPU6050.acc_z_raw: %d\n\n\n", MPU6050.acc_
 351              		.loc 1 120 4 view .LVU79
 352 005e 206A     		ldr	r0, [r4, #32]
 353 0060 FFF7FEFF 		bl	__aeabi_f2d
 354              	.LVL26:
 355 0064 0600     		movs	r6, r0
 356 0066 0F00     		movs	r7, r1
 357 0068 4046     		mov	r0, r8
 358 006a FFF7FEFF 		bl	__aeabi_f2d
 359              	.LVL27:
 360 006e 0290     		str	r0, [sp, #8]
 361 0070 0391     		str	r1, [sp, #12]
 362 0072 281C     		adds	r0, r5, #0
 363 0074 FFF7FEFF 		bl	__aeabi_f2d
 364              	.LVL28:
 365 0078 0090     		str	r0, [sp]
 366 007a 0191     		str	r1, [sp, #4]
 367 007c 3200     		movs	r2, r6
 368 007e 3B00     		movs	r3, r7
 369 0080 0B48     		ldr	r0, .L19+8
 370 0082 FFF7FEFF 		bl	printf
 371              	.LVL29:
 121:Core/Src/main.c **** 		}
 372              		.loc 1 121 4 is_stmt 1 view .LVU80
 121:Core/Src/main.c **** 		}
 373              		.loc 1 121 95 is_stmt 0 view .LVU81
 374 0086 0023     		movs	r3, #0
 375 0088 E15E     		ldrsh	r1, [r4, r3]
 121:Core/Src/main.c **** 		}
 376              		.loc 1 121 114 view .LVU82
 377 008a 0223     		movs	r3, #2
 378 008c E25E     		ldrsh	r2, [r4, r3]
 121:Core/Src/main.c **** 		}
 379              		.loc 1 121 133 view .LVU83
 380 008e 0420     		movs	r0, #4
 381 0090 235E     		ldrsh	r3, [r4, r0]
 121:Core/Src/main.c **** 		}
 382              		.loc 1 121 4 view .LVU84
 383 0092 0848     		ldr	r0, .L19+12
 384 0094 FFF7FEFF 		bl	printf
 385              	.LVL30:
ARM GAS  /tmp/ccC1QyOm.s 			page 15


 386              	.L16:
 387              	.LBE6:
 124:Core/Src/main.c ****   }
 388              		.loc 1 124 5 is_stmt 1 view .LVU85
 389 0098 6420     		movs	r0, #100
 390 009a FFF7FEFF 		bl	HAL_Delay
 391              	.LVL31:
 111:Core/Src/main.c ****   {
 392              		.loc 1 111 9 view .LVU86
 393              	.L17:
 111:Core/Src/main.c ****   {
 394              		.loc 1 111 3 view .LVU87
 116:Core/Src/main.c **** 		{
 395              		.loc 1 116 5 view .LVU88
 116:Core/Src/main.c **** 		{
 396              		.loc 1 116 8 is_stmt 0 view .LVU89
 397 009e FFF7FEFF 		bl	MPU6050_DataReady
 398              	.LVL32:
 116:Core/Src/main.c **** 		{
 399              		.loc 1 116 7 view .LVU90
 400 00a2 0128     		cmp	r0, #1
 401 00a4 BDD0     		beq	.L18
 402 00a6 F7E7     		b	.L16
 403              	.L20:
 404              		.align	2
 405              	.L19:
 406 00a8 00000000 		.word	MPU6050
 407 00ac 00000000 		.word	.LC2
 408 00b0 3C000000 		.word	.LC4
 409 00b4 78000000 		.word	.LC6
 410              		.cfi_endproc
 411              	.LFE41:
 413              		.text
 414              	.Letext0:
 415              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 416              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 417              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 418              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 419              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 420              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 421              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 422              		.file 10 "Core/Inc/MPU6050.h"
 423              		.file 11 "Core/Inc/usart.h"
 424              		.file 12 "<built-in>"
 425              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 426              		.file 14 "Core/Inc/gpio.h"
 427              		.file 15 "Core/Inc/i2c.h"
ARM GAS  /tmp/ccC1QyOm.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccC1QyOm.s:16     .text._write:0000000000000000 $t
     /tmp/ccC1QyOm.s:24     .text._write:0000000000000000 _write
     /tmp/ccC1QyOm.s:69     .text._write:000000000000001c $d
     /tmp/ccC1QyOm.s:74     .text.Error_Handler:0000000000000000 $t
     /tmp/ccC1QyOm.s:81     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccC1QyOm.s:113    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccC1QyOm.s:120    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccC1QyOm.s:249    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccC1QyOm.s:262    .text.main:0000000000000000 $t
     /tmp/ccC1QyOm.s:269    .text.main:0000000000000000 main
     /tmp/ccC1QyOm.s:406    .text.main:00000000000000a8 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart2
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_f2d
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_USART2_UART_Init
MPU6050_Initialization
MPU6050_ProcessData
printf
HAL_Delay
MPU6050_DataReady
MPU6050
